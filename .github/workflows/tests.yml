# Run tests

name: Tests

on:
  push:
    branches: [ "dev", "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  tests:
    environment: dev
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Print env variables
        env:
          PGUSER: ${{ secrets.PGUSER }}
          PGPASSWORD: ${{ secrets.PGPASSWORD }}
          PGHOST: ${{ vars.PGHOST }}
          PGPORT: ${{ vars.PGPORT }}
          PGDATABASE: ${{ vars.PGDATABASE }}
        run: |
          echo "PGUSER: ${{ secrets.PGUSER }}"
          echo "PGPASSWORD: ${{ secrets.PGPASSWORD }}"
          echo "PGHOST: ${{ vars.PGHOST }}"
          echo "PGPORT: ${{ vars.PGPORT }}"
          echo "PGDATABASE: ${{ vars.PGDATABASE }}"

      - name: Start services with Docker Compose
        id: start_services
        env:
          PGUSER: ${{ secrets.PGUSER }}
          PGPASSWORD: ${{ secrets.PGPASSWORD }}
          PGHOST: ${{ vars.PGHOST }}
          PGPORT: ${{ vars.PGPORT }}
          PGDATABASE: ${{ vars.PGDATABASE }}
        run: docker-compose -f docker-compose-dev.yml --env-file ./.env.ci up -d --build

      - name: Log dev-app service output
        if: always()
        run: docker-compose -f docker-compose-dev.yml --env-file ./.env.ci logs dev-app

      - name: Log dev-processor service output
        if: always()
        run: docker-compose -f docker-compose-dev.yml --env-file ./.env.ci logs dev-processor

      - name: Wait for container to be unhealthy  # New step to wait for the container to be unhealthy
        run: |
          until docker ps -f "status=unhealthy" --filter "name=play_with_fastapi_dev-app" --format '{{.Status}}' | grep -q 'unhealthy'; do
            echo "Waiting for container to be unhealthy..."
            sleep 10
          done

      - name: Retrieve logs for dev-app service  # New step to retrieve logs for the dev-app service
        run: docker-compose -f docker-compose-dev.yml --env-file ./.env.ci logs dev-app

#      - name: Wait for healthchecks
#        id: wait_for_healthchecks
#        if: always()
#        run: timeout 60s sh -c 'until docker ps | grep play_with_fastapi_dev-processor_1 | grep -q healthy; do echo "Waiting for container to be healthy..."; sleep 20; done'

      - name: List Docker containers
        if: always()
        run: docker ps

      - name: Run tests
        if: steps.wait_for_healthchecks.outcome == 'success'
        run: docker-compose -f docker-compose-dev.yml exec play_with_fastapi-dev-app-1 pytest tests/

      - name: Stop services
        if: always()
        run: docker-compose -f docker-compose-dev.yml --env-file ./.env.ci down
