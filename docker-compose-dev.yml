version: '3.9'

services:
  dev-db:
    image: postgres:latest
    volumes:
      - ./setup_db:/docker-entrypoint-initdb.d
      - postgres_data_dev:/var/lib/postgresql/data
    env_file:
      - ./.env.dev
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-}
      POSTGRES_HOST: ${POSTGRES_HOST:-dev-db}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL",
             "PGPASSWORD=${POSTGRES_PASSWORD} psql -U ${POSTGRES_USER} -h ${POSTGRES_HOST} -d ${POSTGRES_DB} \
             -c 'SELECT 1 FROM accounts LIMIT 1'"]
      interval: 30s
      timeout: 10s
      retries: 3


  dev-zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000


  dev-kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - dev-zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: dev-zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://dev-kafka:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: /tmp/kafka-logs-dev
      DEV_ENV: "true"
    healthcheck:
      test: [ "CMD", "nc", "-zv","dev-kafka", "29092" ]
      interval: 30s
      timeout: 10s
      retries: 3


  dev-app:
    restart: always
    build:
      context: .
      dockerfile: app/Dockerfile.dev
    volumes:
      - ./app/src:/app/src
      - ./app/tests:/app/tests
    ports:
      - "8000:8000"
    depends_on:
      dev-db:
        condition: service_healthy
      dev-kafka:
        condition: service_healthy
    env_file:
      - ./.env.dev
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-}
      POSTGRES_HOST: ${POSTGRES_HOST:-dev-db}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
      DEV_ENV: "true"
    healthcheck:
      test: ["CMD", "python", "-c",
             "import urllib.request; urllib.request.urlopen('http://dev-app:8000/api/v1/health').read().decode()"]
      interval: 30s
      timeout: 30s
      retries: 3


  dev-worker:
    build:
      context: .
      dockerfile: worker/Dockerfile.dev
    volumes:
      - ./worker/src:/app/src
    depends_on:
      dev-kafka:
        condition: service_healthy
      dev-app:
        condition: service_healthy
    env_file:
      - ./.env.dev
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-}
      POSTGRES_HOST: ${POSTGRES_HOST:-dev-db}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
      DEV_ENV: "true"


volumes:
  postgres_data_dev:
