apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\kompose\kompose-windows-amd64.exe -f docker-compose.yml convert
    kompose.version: 1.33.0 (3ce457399)
  labels:
    io.kompose.service: app
  name: app
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: app
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\kompose\kompose-windows-amd64.exe -f docker-compose.yml convert
        kompose.version: 1.33.0 (3ce457399)
      labels:
        io.kompose.network/play-with-fastapi-default: "true"
        io.kompose.service: app
    spec:
      containers:
        - env:
            - name: PYTHONPATH
              value: /app
            - name: POSTGRES_DB
              value: accounts_db
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  key: POSTGRES_USER
                  name: pguser
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: POSTGRES_PASSWORD
                  name: pgpassword

          image: osherkoren/fastapi-app:1.36
          livenessProbe:
            exec:
              command:
                - python
                - -c
                - import urllib.request; urllib.request.urlopen('http://app:80/api/v1/health').read().decode()
            failureThreshold: 3
            periodSeconds: 30
            timeoutSeconds: 10
          name: app
          ports:
            - containerPort: 80
              hostPort: 80
              protocol: TCP
          volumeMounts:
            - mountPath: /app/src
              name: app-cm0
      restartPolicy: Always
      volumes:
        - configMap:
            name: app-cm0
          name: app-cm0
