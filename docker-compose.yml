version: '3.9'

services:
  db:
    image: postgres:alpine
    volumes:
      - ./setup_db:/docker-entrypoint-initdb.d
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ${ENV_FILE:-.env}
    environment:
      PGUSER: ${PGUSER:-postgres}
      PGPASSWORD: ${PGPASSWORD:-}
      PGHOST: ${PGHOST:-db}
      PGDATABASE: ${PGDATABASE:-postgres}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "psql -U ${PGUSER} -d ${PGDATABASE} -c 'SELECT 1 FROM accounts LIMIT 1'"]
      interval: 30s
      timeout: 10s
      retries: 3

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.5.1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: /tmp/kafka-logs
    healthcheck:
      test: ["CMD", "nc", "-zv","kafka", "9092"]
      interval: 30s
      timeout: 10s
      retries: 3

  app:
    build:
      context: .
      dockerfile: app_repo/Dockerfile
    volumes:
      - ./app_repo/app:/app
    ports:
      - "80:80"
    depends_on:
      db:
        condition: service_healthy
      kafka:
        condition: service_healthy
    env_file:
      - ${ENV_FILE:-.env}
    healthcheck:
      test: ["CMD", "python", "-c",
             "import urllib.request; urllib.request.urlopen('http://app:80/api/v1/health').read().decode()"]
      interval: 30s
      timeout: 10s
      retries: 3

  processor:
    build:
      context: .
      dockerfile: processor_repo/Dockerfile
    depends_on:
      kafka:
        condition: service_healthy
      app:
        condition: service_healthy
    env_file:
      - ${ENV_FILE:-.env}

volumes:
  postgres_data:
