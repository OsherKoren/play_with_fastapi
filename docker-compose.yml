version: '3.9'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.6.1

    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: /tmp/kafka-logs
    healthcheck:
      test: ["CMD", "nc", "-zv","kafka", "9092"]
      interval: 30s
      timeout: 10s
      retries: 3

  app:
    image: osherkoren/fastapi-app:latest
    volumes:
      - ./app/src:/app/src
    ports:
      - "8000:8000"
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-}
      POSTGRES_HOST: ${POSTGRES_HOST:-db}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
    healthcheck:
      test: ["CMD", "python", "-c",
             "import urllib.request; urllib.request.urlopen('http://app:8000/api/v1/health').read().decode()"]
      interval: 30s
      timeout: 10s
      retries: 3

#  worker:
#    image: osherkoren/kafka-worker:latest
#    volumes:
#        - ./worker/src:/app/src
#    depends_on:
#      kafka:
#        condition: service_healthy
#      app:
#        condition: service_healthy
#    environment:
#      POSTGRES_USER: ${POSTGRES_USER:-postgres}
#      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-}
#      POSTGRES_HOST: ${POSTGRES_HOST:-db}
#      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
#      POSTGRES_DB: ${POSTGRES_DB:-postgres}
