apiVersion: apps/v1
kind: Deployment

metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Values.namespace | default "msg-preds" }}
  labels:
    app: {{ .Release.Name }}

spec:
  replicas: {{ .Values.kafka.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      containers:
        - name: kafka
          image: "{{ .Values.kafka.image.repository }}:{{ .Values.kafka.image.tag }}"
          command: ["bash", "-c", "unset KAFKA_PORT; /etc/confluent/docker/run"]

          ports:
            - containerPort: {{ .Values.kafka.service.port }}

          env:
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "{{ .Values.kafka.env.KAFKA_ADVERTISED_LISTENERS }}"
            - name: KAFKA_LISTENERS
              value: "{{ .Values.kafka.env.KAFKA_LISTENERS }}"
            - name: KAFKA_BROKER_ID
              value: "{{ .Values.kafka.env.KAFKA_BROKER_ID }}"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: "{{ .Values.kafka.env.KAFKA_ZOOKEEPER_CONNECT }}"
            - name: KAFKA_LOG_DIRS
              value: "{{ .Values.kafka.env.KAFKA_LOG_DIRS }}"
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "{{ .Values.kafka.env.KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR }}"

          resources:
            requests:
              memory: "{{ .Values.kafka.resources.requests.memory }}"
              cpu: "{{ .Values.kafka.resources.requests.cpu }}"
            limits:
              memory: "{{ .Values.kafka.resources.limits.memory }}"
              cpu: "{{ .Values.kafka.resources.limits.cpu }}"

          livenessProbe:
            exec:
              command: {{ .Values.kafka.livenessProbe.command | toJson }}
            failureThreshold: {{ .Values.kafka.livenessProbe.failureThreshold }}
            periodSeconds: {{ .Values.kafka.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.kafka.livenessProbe.timeoutSeconds }}

      restartPolicy: Always
