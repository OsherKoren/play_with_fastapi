apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Values.namespace | default "msg-preds" }}
  labels:
    app: {{ .Release.Name }}

spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}

    spec:
      containers:
        - name: worker
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          ports:
            - containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
          env:
            - name: PYTHONPATH
              value: "{{ .Values.env.PYTHONPATH }}"
            - name: KAFKA_HOST
              value: "{{ .Values.env.KAFKA_HOST }}"
            - name: KAFKA_PORT
              value: "{{ .Values.env.KAFKA_PORT }}"
            - name: POSTGRES_HOST
              value: "{{ .Values.env.POSTGRES_HOST }}"
            - name: POSTGRES_PORT
              value: "{{ .Values.env.POSTGRES_PORT }}"
            - name: POSTGRES_DB
              value: "{{ .Values.env.POSTGRES_DB }}"
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.env.POSTGRES_USER.secretName }}
                  key: {{ .Values.env.POSTGRES_USER.secretKey }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.env.POSTGRES_PASSWORD.secretName }}
                  key: {{ .Values.env.POSTGRES_PASSWORD.secretKey }}

          resources:
            requests:
              memory: {{ .Values.resources.requests.memory }}
              cpu: {{ .Values.resources.requests.cpu }}
            limits:
              memory: {{ .Values.resources.limits.memory }}
              cpu: {{ .Values.resources.limits.cpu }}

      restartPolicy: Always
